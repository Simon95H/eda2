{"trial_id": "05", "hyperparameters": {"space": [{"class_name": "Int", "config": {"name": "units", "default": null, "conditions": [], "min_value": 32, "max_value": 512, "step": 32, "sampling": "linear"}}, {"class_name": "Int", "config": {"name": "layers", "default": null, "conditions": [], "min_value": 1, "max_value": 2, "step": 1, "sampling": "linear"}}, {"class_name": "Choice", "config": {"name": "activation", "default": "relu", "conditions": [], "values": ["relu", "tanh"], "ordered": false}}, {"class_name": "Boolean", "config": {"name": "dropout", "default": false, "conditions": []}}, {"class_name": "Float", "config": {"name": "lr", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}], "values": {"units": 160, "layers": 2, "activation": "relu", "dropout": false, "lr": 0.00025346283590796484}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 266, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\base_tuner.py\", line 231, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 287, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 213, in _build_and_fit_model\n    model = self._try_build(hp)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 155, in _try_build\n    model = self._build_hypermodel(hp)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\keras_tuner\\engine\\tuner.py\", line 146, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n  File \"C:\\Users\\rs3753e\\AppData\\Local\\Temp\\ipykernel_15016\\4197921246.py\", line 14, in build_model\n    KNN = single_call(\n  File \"C:\\Users\\rs3753e\\AppData\\Local\\Temp\\ipykernel_15016\\619208079.py\", line 15, in single_call\n    y_output= Dense(units='1', name='output')(X)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 996, in __call__\n    return self._functional_construction_call(inputs, args, kwargs,\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 1134, in _functional_construction_call\n    outputs = self._keras_tensor_symbolic_call(\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 867, in _keras_tensor_symbolic_call\n    return self._infer_output_signature(inputs, args, kwargs, input_masks)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 905, in _infer_output_signature\n    self._maybe_build(inputs)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\engine\\base_layer.py\", line 2667, in _maybe_build\n    self.build(input_shapes)  # pylint:disable=not-callable\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\keras\\layers\\core.py\", line 1194, in build\n    input_shape = tensor_shape.TensorShape(input_shape)\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py\", line 765, in __init__\n    self._dims = [Dimension(d) for d in dims]\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py\", line 765, in <listcomp>\n    self._dims = [Dimension(d) for d in dims]\n  File \"C:\\Users\\rs3753e\\Anaconda3\\envs\\tf_gpu\\lib\\site-packages\\tensorflow\\python\\framework\\tensor_shape.py\", line 206, in __init__\n    six.raise_from(\n  File \"<string>\", line 3, in raise_from\nTypeError: Dimension value must be integer or None or have an __index__ method, got value 'TensorShape([None, 160])' with type '<class 'tensorflow.python.framework.tensor_shape.TensorShape'>'\n"}